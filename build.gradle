/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0/userguide/tutorial_java_projects.html
 */
import org.apache.tools.ant.taskdefs.condition.Os


// Apply the java plugin to add support for Java
apply plugin: 'groovy'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
ext{
    groovyVersion = '2.4.10'
    gebVersion = '1.1.1'
    seleniumVersion = '3.4.0'
    phantomJsVersion = '2.1.1'
    htmlunitVersion = '2.27'

}

apply from: "gradle/osSpecificDownloads.gradle"

// In this section you declare the dependencies for your production and test code
dependencies {
    //groovy is the language for scripting java
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    //geb, selenium and drivers
    compile "org.gebish:geb-junit4:$gebVersion"
    
    compile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    compile "org.seleniumhq.selenium:htmlunit-driver:$htmlunitVersion"

    //only use phantomjs so we don't have to worry about paths to browsers
    testCompile("com.codeborne:phantomjsdriver:1.4.3") {
        // phantomjs driver pulls in a different selenium version
        transitive = false
    }
}



task htmlUnitTest(type:Test) {
    //dependsOn unzipPhantomJs
    reports {
            html.destination = reporting.file("$name/tests")
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", "htmlUnit"

    //def phantomJsFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "phantomjs.exe" : "bin/phantomjs"
    //systemProperty "phantomjs.binary.path", new File(unzipPhantomJs.outputs.files.singleFile, phantomJsFilename).absolutePath
}

test {
    
    dependsOn clean, htmlUnitTest
    enabled = false
}

