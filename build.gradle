/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.0/userguide/tutorial_java_projects.html
 */
import org.apache.tools.ant.taskdefs.condition.Os


// Apply the java plugin to add support for Java
apply plugin: 'groovy'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
ext{
    drivers = ["htmlUnit", "firefox", "chrome"]
    groovyVersion = '2.4.10'
    gebVersion = '1.1.1'
    seleniumVersion = '3.4.0'
    htmlunitVersion = '2.27'
    geckoDriverVersion = '0.17.0'
    chromeDriverVersion = '2.30'

}

apply from: "gradle/osSpecificDownloads.gradle"

// In this section you declare the dependencies for your production and test code
dependencies {
    //groovy is the language for scripting java
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    //geb, selenium and drivers
    compile "org.gebish:geb-junit4:$gebVersion"
    
    compile "org.seleniumhq.selenium:selenium-support:$seleniumVersion"
    compile "org.seleniumhq.selenium:htmlunit-driver:$htmlunitVersion"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
    testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"
    
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        ignoreFailures = true

        reports {
            html.destination = reporting.file("$name/tests")
            junitXml.destination = file("$buildDir/test-results/$name")
        }

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

        // If you wanted to set the baseUrl in your buildâ€¦
        // systemProperty "geb.build.baseUrl", "http://myapp.com"
    }
}

firefoxTest {
    dependsOn unzipGeckoDriver
    def geckodriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "geckodriver.exe" : "geckodriver"
    def geckodriverFile = new File(unzipGeckoDriver.outputs.files.singleFile, geckodriverFilename)
    systemProperty "webdriver.gecko.driver", geckodriverFile.absolutePath
}

chromeTest {
    dependsOn unzipChromeDriver

    def chromedriverFilename = Os.isFamily(Os.FAMILY_WINDOWS) ? "chromedriver.exe" : "chromedriver"
    systemProperty "webdriver.chrome.driver", new File(unzipChromeDriver.outputs.files.singleFile, chromedriverFilename).absolutePath
}

test {

    
    dependsOn drivers.collect{tasks["${it}Test"]}
    enabled = false
}

